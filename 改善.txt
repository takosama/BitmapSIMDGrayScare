## 実施した極限チューニング

- **固定小数点SIMDの徹底最適化**: AVX2パスは`MultiplyAddAdjacent`と整数シフトでBGRA→グレースケールを16ピクセル単位で一括処理し、丸めやα書き込みもSIMDで完結させています。
- **FMAパスとのハイブリッド**: FMA対応CPUでは`Fma.MultiplyAdd`による浮動小数点連鎖を8ピクセル単位で実行し、整数パスとの差分をBenchmarkDotNetで比較できるようにしました。
- **メモリアクセスの隙を詰める**: `NativeMemory.AlignedAlloc`で64byte境界に揃えた入力/出力バッファを確保し、`Sse.Prefetch0`で先読みしてキャッシュミスを抑制。BGRA以外は事前に排除する前提設計に統一しています。
- **複数スレッドの活用**: `Parallel.For`で行タイルを分割するAVX2パスを追加し、`MaxDegreeOfParallelism`で論理コア数に合わせたスケーリングを実現しました。
- **命令セットの拡張検討**: AVX-512F/BWサポート時は32ピクセルを一度にロードして2ブロック連続処理し、ARM64では`AdvSimd`のベクトルロード/ストアを使う専用パスを用意して分岐を解消しました。
- **入出力形式の前処理**: 変換対象をBGRAフォーマットに固定し、α値はSIMDで255を合成。余計な分岐や不要な書き込みを排除して帯域を節約しています。
- **ベンチマーク環境の外乱排除**: BenchmarkDotNetの`SimpleJob`でウォームアップ/計測回数を固定し、アライメント済みバッファと乱数初期化で測定の再現性を確保しています。
- **GitHub本体との互換**: 既存の`ConsoleApp67`名前空間とテストクラス名を維持したまま、パラメーター化した解像度（1280×720/1920×1080）を選択できるようにし、マージコンフリクトを解消しています。
